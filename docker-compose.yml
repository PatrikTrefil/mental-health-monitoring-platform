# docker compose for production
version: "3"

services:
  web-app:
    build:
      context: ./src/web-app
      dockerfile: Dockerfile.production
  reverse-proxy:
    restart: on-failure

    # use different image name than of the dev image
    # to avoid name conflict (now we can keep both containers locally)
    image: reverse-proxy-production
    # since the image is not available in any repository we disable pulling
    pull_policy: never

    build: ./src/reverse-proxy/production/


    ports:
      - 80:80
  mongo:
    build:
      context: ./src/formio-mongo
      args:
        - FORMIO_MONGO_USER=${FORMIO_MONGO_USER}
        - FORMIO_MONGO_PASSWORD=${FORMIO_MONGO_PASSWORD}
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

    restart: on-failure
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

  formio:
    build: ./src/formio/
    # will restart if mongo unavailable (again a bad choice bad the form.io devs)
    restart: on-failure
    depends_on:
      - mongo
    # TODO: this is horrible design by form.io, trying to communicate with them to remove this
    volumes:
      - ./src/formio/:/app:rw
    environment:
      - ROOT_EMAIL=${ROOT_EMAIL}
      - ROOT_PASSWORD=${ROOT_PASSWORD}
      - NODE_CONFIG=${NODE_CONFIG}
    stdin_open: true  # -i
    tty: true # -t
  monitoring:
    image: gcr.io/cadvisor/cadvisor:latest
    command:
    - '-url_base_prefix=/monitoring'
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:ro
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro
    # give access to all devices
    privileged: true
    # map kernel log
    devices:
    - device=/dev/kmsg

volumes:
  mongodb-data:
