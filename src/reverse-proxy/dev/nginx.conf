worker_processes auto;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include mime.types; # add mimetypes based on file extensions

    server {
        # it's necessary that this port matches the one that is published in the docker-compose.yml
        # i.e. the mapping has to look like this: 8080:8080 (otherwise certain built-in redirects won't work properly)
        listen 8080;
        server_name localhost 127.0.0.1;
        # this is the internal Docker DNS, cache only for 30s
        resolver 127.0.0.11 valid=30s;

        # public page to check if the server is running
        location /health {
            return 200;
        }

        # page to check basic stats of the server
        location /nginx_status {
            stub_status on;
            access_log off;
        }

        location ~ ^/monitoring(.*)$ {
            # https://dev.to/danielkun/nginx-everything-about-proxypass-2ona
            set $upstream http://monitoring:8080;
            proxy_pass $upstream$1$is_args$args;

            # prepend all redirects with /monitoring
            proxy_redirect ~^(/.*) /monitoring$1;
        }

        location ~ ^/formio/(.*)$ {
            # useful links:
            # https://help.form.io/deployments/deployment-configurations
            # https://help.form.io/deployments/load-balancer-configuration
            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;
            proxy_read_timeout  90;

            # https://dev.to/danielkun/nginx-everything-about-proxypass-2ona
            set $upstream http://formio:3001/;
            proxy_pass $upstream$1$is_args$args;

            proxy_redirect http://formio:3001 https://$host;
        }

        # if the request was not handled by any of the above locations, proxy it to the web-app
        location ~ ^/(.*)$ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # https://dev.to/danielkun/nginx-everything-about-proxypass-2ona
            set $upstream http://web-app:3000;
            proxy_pass $upstream/$1$is_args$args;

            proxy_redirect off;
            proxy_read_timeout 240s;
        }
    }
}
