worker_processes auto;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include mime.types; # add mimetypes based on file extensions


    server {
        # it's necessary that this port matches the one that is published in the docker-compose.yml
        # i.e. the mapping has to look like this: 80:80 (otherwise certain built-in redirects won't work properly)
        listen 80;
        server_name localhost 127.0.0.1;
        # this is the internal Docker DNS, cache only for 30s
        resolver 127.0.0.11 valid=30s;

        # public page to check if the server is running
        location /health {
            return 200;
        }

        location /monitoring/ {
            # pass address indirectly via variable to use resolver
            # if we did not use resolver, nginx would shutdown if the upstream  is not available
            # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
            set $upstream http://monitoring:8080;
            proxy_pass $upstream;
        }

        # private page to check basic stats of the server
        # this can be accessed using `curl localhost/nginx_status` from the running instance's terminal
        # for more information see the Prometheus interface
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.0/16;	# only allow requests from localhost
            deny all;		# deny all other hosts
        }
    }
}
